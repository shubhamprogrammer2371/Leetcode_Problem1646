int getMaximumGenerated(int n) {
    if(!n)
        return 0;
    int *arr = calloc(n+1,sizeof(int)) , max = 0;
    arr[1] = 1;
    for( int i = 1 ; i < n + 1 ; i++)
    {
        if((((2*i) + 1) > n) || ((2*i) > n))
            break;
        arr[2*i] = arr[i];
        arr[(2*i) + 1] = arr[i] + arr[i + 1];
    }
    for( int i = 1 ; i < n + 1 ; i++)
        max = fmax(max,arr[i]);
    free(arr);
    return max;
}


------------------------------------------------------------------------------------------------------------------------------------------------


int getMaximumGenerated(int n){
    if(!n) 
        return 0;
    int *dp = calloc(n + 1 ,sizeof(int)) , r_max = 1;
    dp[1] = 1;
    for(int i=2;i<=n;i++)
    {
        dp[i] = (i&1) ? dp[i/2] + dp[i/2+1] : dp[i/2];
        r_max = fmax(r_max,dp[i]);
    }
    free(dp);
    return r_max;
} 
